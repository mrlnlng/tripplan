{"version":3,"sources":["tripplanBlue.png","header.png","background.jpg","withFetch.js","Loader.js","Autocomplete.js","NavBar.js","Configuration.js","Results.js","Search.js","Undefined.js","App.js","index.js"],"names":["module","exports","useFetch","url","useState","loading","setLoading","undefined","data","setData","useEffect","a","fetch","response","json","SkeletonStyles","makeStyles","theme","colored","color","palette","primary","main","transform","Loader","classes","name","className","fadeIn","useStyle","option","props","fontSize","height","padding","background","display","justifyContent","alignItems","wordWrap","width","textAlign","search","flexDirection","position","input","border","borderRadius","backgroundColor","fontWeight","fontFamily","suggestions","top","locationIcon","marginRight","searchIconDiv","paddingLeft","searchIcon","searchBox","Autocomplete","elements","useMediaQuery","location","setLocation","setSuggestions","setInput","selectedIndex","setSelectedIndex","inputState","setinputState","myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","redirect","randomNumber","Math","floor","random","resp","ok","arrayResp","arraySuggestions","filter","arrayInfoSuggestions","map","element","handleChange","e","target","value","handleKeyDown","keyCode","prevState","oldIndex","parse","hitsPerPage","type","placeholder","autoComplete","onChange","style","onKeyDown","to","pathname","state","selectedButtons","textDecoration","suggestion","index","key","onClick","cursor","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","length","borderBottomRightRadius","navBarStyle","whiteBar","listStyleType","boxShadow","zIndex","navBar","margin","title","textField","logo","paddingRight","avatar","NavBar","smallerMatches","exact","src","headerImage","alt","Avatar","BACKEND","window","hostname","useStyles","result","flexWrap","overflow","header","bold","subtitle","buttonGroup","column","row","navbar","buttonClicked","buttonUnclicked","loadingPage","resultPage","useCardStyles","card","maxHeight","maxWidth","rating","icons","info","media","crop","objectFit","airbnb","responsiveText","RestaurantResult","link","Result","renderAdditionalContent","href","rel","HotelResult","PlaceResult","url_place","encodedUrl","encodeURIComponent","setLink","hasLink","setHasLink","fetchNow","setFetchNow","linkExists","setLinkExists","newLink","newHasLink","console","log","open","useGooglePlaces","image_url","review_count","price","ratingStar","i","push","missingStarsNum","missingStars","Array","fill","_","Image","join","Typography","component","variant","gutterBottom","Results","numCols","cityName","split","toUpperCase","slice","matches","buttons","setButton","selected","Object","keys","getSelected","Buttons","ButtonGroup","size","Button","createButtonHandler","disableElevation","buttonName","newButtons","reverseIndex","y","columns","x","col","TopCard","renderedResult","destinationOption","assign","optionMenu","order","orderSelect","marginBottom","button","borderColor","orderSearch","marginTop","container","flexDirectionContainer","alignItemContainer","underline","underlineTransform","selectForm","appearance","marginLeft","dropDownArrow","mainMenu","mainMenuTransform","page","upperBody","randomSlides","animation","from","opacity","subtitleContainer","rectangle","lowerBody","paddingTop","paddingBottom","randomCard","cardSubtitle","containerWithIcon","searchPage","autocomplete","loadingSkeletons","loadingSkeleton","loadingSkeletonText","loadingSubtitleContainer","useColorStyle","gradient","SearchButton","randomizeCard","topCityArray","destinationOptionsArray","randomNumberCity","Search","numberCards","tabletMatches","desktopMatches","placeholderMatches","table","loadingSkeletonArray","setButtons","randomCards","setRandomCards","fetchNewCard","newDestinationOption","newChosenCity","setAllCards","newRandomCards","chosenCityArray","chosenCity","randomDict","Promise","all","responses","datas","newRandomCardsData","shuffleCards","setTimeout","clearTimeout","document","getElementById","nameOption","options","newSelectedButtons","createChangeHandler","id","Skeleton","cardProps","mainTitle","icon","Undefined","createMuiTheme","typography","body2","secondary","App","routeName","ThemeProvider","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d6b1ca2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tripplanBlue.ae2789ca.png\";","module.exports = __webpack_public_path__ + \"static/media/header.50443b6c.png\";","module.exports = __webpack_public_path__ + \"static/media/background.b1a603d3.jpg\";","// import React from \"react\"\nimport { useEffect, useState} from \"react\"\n// import Loader from \"./Loader\"\n\nexport function useFetch(url){\n    const [loading, setLoading] = useState(true)\n    const [data, setData] = useState(undefined)\n    useEffect(() => {\n\n        (async function () {\n           let response = await fetch(url)\n           let json = await response.json()\n           setData(json)\n           setLoading(false)\n\n        }\n        )()\n    }, [url])\n    \n    return [loading,data, setLoading]\n}\n\n\n// const [loading,data] = useFetch(\"h127.0l0/restaurants\")\n\n\n// export const withFetch = (Component,url) => {\n//     const ReturnedComponent = (props) => {\n//         const [loading, setLoading] = useState(true)\n//         const [data, setData] = useState(undefined)\n//         useEffect(() => {\n\n//             (async function () {\n//                 let response = await fetch(url)\n//                 let json = await response.json()\n//                 setData(json)\n//                 setLoading(false)\n\n//             }\n//             )()\n//         }, [])\n\n\n//         if (loading) {\n//             return <Loader />\n//         } else {\n//             return <Component data={data} {...props}/>\n//         }\n//     }\n//     return ReturnedComponent\n// }\n\nexport default useFetch","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Spinner from \"react-spinkit\"\n\n\n\nconst SkeletonStyles = makeStyles(theme => ({\n  \n    colored : {\n        color : theme.palette.primary.main,\n        transform: \"translate(0%,20vh)\"\n    }\n}))\n\nfunction Loader() {\n    const classes = SkeletonStyles()\n   \n    return (\n        <>\n            <Spinner name=\"ball-spin-fade-loader\" className={classes.colored} fadeIn='none' />\n            \n             \n\n        </>\n    )\n}\n\nexport default Loader","import React from \"react\"\nimport { useState, useEffect } from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Link } from \"react-router-dom\"\n// import Search from \"./Search\";\nimport { SearchButton } from \"./Search\"\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nconst useStyle = makeStyles((theme) => (\n    {\n        option: props => ({\n            fontSize: \".8rem\",\n            height: \"1.4rem\",\n            padding: \"0.4rem\",\n            background: \"#F4FAF9\",\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            wordWrap: \"normal\",\n            width: \"auto\",\n            textAlign: \"left\"\n            // '&:hover': {\n            //     background: \"#E1E1E1\"\n            // }\n            //    background: props.index === props.selectedIndex ? \"#E1E1E1\" : \"white\"\n        }),\n        search: {\n            // width: \"30vw\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"flex-start\",\n            position: \"relative\"\n            // height: \"30vh\"\n            // background: \"red\"\n\n        },\n        input: {\n            border: \"0\",\n            height: '1.4rem',\n            width: \"25vw\",\n            padding: '.4rem 4rem .4rem .25rem',\n            // width: props.width,\n            borderRadius: '0rem .5rem .5rem 0rem',\n            backgroundColor: '#F4FAF9',\n            '&::placeholder': {\n                fontWeight: 'normal',\n                fontFamily: 'Raleway'\n\n            }\n        },\n        \n        \n\n        suggestions: {\n            width: \"100%\",\n            position: \"absolute\",\n            top: \"2.7rem\"\n\n        },\n        \n        locationIcon: {\n            fontSize: \"1rem\",\n            color: \"grey\",\n            marginRight: \".5rem\"\n            \n        },\n        searchIconDiv: {\n            height: \"2.2rem\",\n            background: \"#F4FAF9\",\n            borderRadius: \".5rem 0rem 0rem .5rem\",\n            alignItems: \"center\",\n            display: \"flex\",\n            width: \"2rem\",\n            paddingLeft: \".5rem\",\n            border: \"none\"\n\n\n        },\n        searchIcon: props => ({\n            color: \"#717473\",\n            \n            // position: \"absolute\",\n            // left: \"0.12em\",\n            // bottom: \"0.12em\",\n            // transform: \"translate(150%)\"\n        }),\n        searchBox: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n        }\n        \n    }))\n    \n    export const Autocomplete = (props) => {\n        const desktopMatches = useMediaQuery('(min-width: 1350px ')\n        let elements\n        \n        if (desktopMatches) {\n            elements = {\n            // searchIconTransform: \"translate(150%)\"\n        }\n    }\n    \n    else {\n        elements = {\n            // searchIconTransform: \"translate(150%)\"\n        }\n    }\n    // console.log(elements.selectedButtons)\n    const [location, setLocation] = useState(\"\")\n    const [suggestions, setSuggestions] = useState([])\n    // const [hovered, setHovered] = useState(false)\n    const [input, setInput] = useState(\"\")\n    const [selectedIndex, setSelectedIndex] = useState(0)\n    const [inputState, setinputState] = useState(true)\n    // const [searchState, setSearchState] =  useState(false)\n    const classes = useStyle(elements)\n    var myHeaders = new Headers();\n    // console.log(\"This is props.location\", location) \n    myHeaders.append(\"Content-Type\", \"application/json\");\n    const hitsPerPage = 5\n    // const lastIndexSuggestions = hitsPerPage - 1\n    var raw = JSON.stringify({ \"query\": `${input}`, \"type\": \"city\", \"language\": \"en\", \"aroundLatLngViaIP\": false, \"hitsPerPage\": hitsPerPage });\n    \n    var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n    \n    useEffect(() => {\n        (async function () {\n            let max = 3\n            let min = 2\n            let randomNumber = Math.floor(Math.random() * (max - min)) + min\n            let resp = await fetch(`https://places-${randomNumber}.algolianet.com/1/places/query`, requestOptions)\n            // let resp = await fetch(`https://places-.algolianet.com/1/places/query`, requestOptions)\n            let arrayInfoSuggestions\n            if (resp.ok) {\n                // console.log(input)\n                let json = await resp.json()\n                let arrayResp = json[\"hits\"]\n                // console.log(arrayResp)\n                const arraySuggestions = arrayResp.filter(resp => resp[\"_highlightResult\"][\"locale_names\"][0][\"matchLevel\"] === \"full\")\n                arrayInfoSuggestions = arraySuggestions.map(element => {\n                    return `${element[\"locale_names\"][0]}, ${element[\"administrative\"][0]}, ${element[\"country\"]}`\n                    // return { \"city\": element[\"locale_names\"][0], \"administrative\": element[\"administrative\"][0], \"country\": element[\"country\"] }\n                })\n                // console.log(\"its okay!\")\n                // console.log(arrayInfoSuggestions)\n                \n                \n            }\n            else {\n                arrayInfoSuggestions = []\n            }\n            setSuggestions(arrayInfoSuggestions)\n        })()\n        \n    }, [input])\n    \n    useEffect(() => {\n        setLocation(suggestions[selectedIndex])\n    }, [selectedIndex])\n    \n    const handleChange = (e) => {\n        // e.preventDefault()\n        setLocation(e.target.value)\n        setInput(e.target.value)\n        \n    }\n    \n    const handleKeyDown = (e) => {\n        if (e.keyCode === 40) {\n            setSelectedIndex(prevState => {\n                let oldIndex\n                let newIndex\n                oldIndex = JSON.parse(JSON.stringify(prevState))\n                if (oldIndex < hitsPerPage - 1) {\n                    newIndex = oldIndex + 1\n                }\n                else {\n                    newIndex = 0\n                }\n                return newIndex\n            })\n        }\n        else if (e.keyCode === 38) {\n            setSelectedIndex(prevState => {\n                let oldIndex\n                let newIndex\n                oldIndex = JSON.parse(JSON.stringify(prevState))\n                if (oldIndex > 0) {\n                    newIndex = oldIndex - 1\n                }\n                else {\n                    newIndex = 0\n                }\n                \n                return newIndex\n            })\n        }\n        else if (e.keyCode === 13) {\n            setLocation(suggestions[selectedIndex])\n            setinputState(false)\n        }\n        else if (e.keyCode === 8) {\n            setinputState(true)\n        }\n    }\n    \n    \n    if (inputState) {\n        return (\n            <>\n                <div className={classes.search}>\n\n                    <div className={classes.searchBox}>\n\n                        <div className={classes.searchIconDiv}>\n                            <SearchIcon className={classes.searchIcon}></SearchIcon>\n                        </div>\n                        {/* <form action=\"\"></form> */}\n                        <input\n                            type=\"text\"\n                            placeholder=\"Where to?\"\n                            value={location || ''}\n                            name=\"getridofchromeautocompletewithgiberrish-asldkajsldkajsdkaj-location\"\n                            autoComplete=\"chrome-off\"\n                            className={classes.input}\n                            onChange={handleChange}\n                            style={{\"outline\" : \"none\"}}\n                            onKeyDown={(e) => {\n                                handleKeyDown(e)\n                            }}\n                            >\n                        </input>\n                        <Link to=\n                            {{\n                                pathname: \"/results\",\n                                state: { location: location, selectedButtons: props.selectedButtons }\n                            }}\n                            style={{ width: \"0\",textDecoration : \"none\" }}>\n                            <div>\n                                <SearchButton></SearchButton>\n                            </div>\n                        </Link>\n\n                    </div>\n\n                    <div className={classes.suggestions}\n                        // style ={{marginTop: inputState ? \".6rem\" : \"0rem\"}}\n                        >\n                        {suggestions.map((suggestion, index) => (\n                            \n                            <div className={classes.option}\n                            key={index}\n                                onClick={(e) => {\n                                    setLocation(suggestion)\n                                    setSelectedIndex(index)\n                                    setinputState(false)\n                                }}\n                                value={suggestion}\n                                style={{\n                                    background: index === selectedIndex ? \"#E1E1E1\" : \"white\",\n                                    cursor: \"default\",\n                                    borderTopLeftRadius: index === 0 ? \".5rem\" : null,\n                                    borderTopRightRadius: index === 0 ? \".5rem\" : null,\n                                    borderBottomLeftRadius: index === (suggestions.length - 1) ? \".5rem\" : null,\n                                    borderBottomRightRadius: index === (suggestions.length - 1) ? \".5rem\" : null\n                                }}\n\n                            ><LocationOnIcon className={classes.locationIcon}></LocationOnIcon>{suggestion}\n                            </div>\n                        )\n                        )}\n\n                    </div>\n\n                </div>\n            </>\n        )\n    }\n    else {\n        return (\n            <div className={classes.search}>\n\n                <div className={classes.searchBox}>\n\n                    <div className={classes.searchIconDiv}>\n                        <SearchIcon className={classes.searchIcon}></SearchIcon>\n                    </div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Where to?\"\n                        value={location}\n                        name=\"getridofchromeautocomplete-with-giverrish-asldkajsldkjalskdjlasdkj-location\"\n                        className={classes.input}\n                        onChange={handleChange}\n                        // onClick={handleClick}\n                        style={{\"outline\":\"none\"}}\n                        onKeyDown={(e) => {\n                            handleKeyDown(e)\n                        }}\n                    >\n                    </input>\n                    <Link to=\n                        {{\n                            pathname: \"/results\",\n                            state: { location: location, selectedButtons: props.selectedButtons }\n                        }}\n                        style={{ width: \"0rem\", textDecoration: \"none\" }}>\n                        <SearchButton></SearchButton>\n                    </Link>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Autocomplete","import React from \"react\"\n// import { useState } from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport headerImage from \"./tripplanBlue.png\"\nimport { Link } from 'react-router-dom';\n// import Button from '@material-ui/core/Button';\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport Avatar from '@material-ui/core/Avatar';\nimport { Autocomplete } from './Autocomplete'\n\nconst navBarStyle = makeStyles(() => (\n    {\n        whiteBar: {\n            backgroundColor: \"white\",\n            height: \"5rem\",\n            width: \"100vw\",\n            flexDirection: \"row\",\n            listStyleType: \"none\",\n            position: \"fixed\",\n            top: \"0\",\n            boxShadow: \"0px 1px 10px #DEDEDE\",\n            zIndex: \"100\"\n        },\n\n        navBar: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            width: \"90%\",\n            margin: \"0 auto\"\n        },\n        title: {\n            width: '100%',\n            fontSize: \"1.75rem\",\n            fontWeight: 'Bold',\n\n            display: \"flex\",\n            alignItems: \"center\",\n            margin: \"0rem 1rem\",\n            color: \"#5DB4AC\",\n        },\n        textField: {\n            alignItems: \"center\",\n            display: \"flex\",\n        },\n        logo: {\n            display: 'flex',\n            flexDirection: \"row\",\n            alignItems: \"center\",\n        },\n        search: {\n            paddingRight: \".75rem\"\n        },\n        avatar: {\n            display: \"flex\",\n            \n        }\n\n    }\n\n))\n// const useColorStyle = makeStyles(\n//     {\n//         gradient: {\n//             background: 'linear-gradient(45deg, #429A8F 30%, #48B09E 90%)',\n//             color: \"white\",\n//             marginLeft: \"1rem\",\n//             transform: \"translate(0%, 20%)\"\n//         }\n//     }\n// )\n\n\nexport const NavBar = () => {\n    // const [, setSearchButton] = useState(false)\n    const classes = navBarStyle()\n    const smallerMatches = useMediaQuery('(max-width:1000px)');\n\n\n    return (\n        <>\n            <div className={classes.whiteBar}>\n                <div className={classes.navBar}>\n\n                    <div>\n                        <Link to=\"/\" exact=\"true\" style={{ textDecoration: \"none\", color: \"black\" }}>\n                            <div className={classes.logo}>\n                                <div>\n                                    <img src={headerImage} alt=\"airplane logo\" height=\"90\"></img>\n                                </div>\n                                <div>\n                                    {smallerMatches ? null : <span className={classes.title}>TRIP PLAN</span>}\n                                </div>\n                            </div>\n                        </Link>\n                    </div>\n\n                    <div style={{\"display\" : \"flex\"}}>\n                        <Autocomplete className={classes.textField}></Autocomplete>\n                    <div className={classes.avatar}>\n                        <Avatar alt=\"avatar\" className={classes.avatar}></Avatar>\n                    </div>\n\n                </div>\n                </div>\n            </div >\n        </>\n    )\n}\n\nexport default NavBar","export const BACKEND = window.location.hostname === \"localhost\" ? \"http://127.0.0.1:5000\" : \"https://tripplan-backend.herokuapp.com\"","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from \"@material-ui/core/Typography\"\nimport StarIcon from '@material-ui/icons/Star';\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport useFetch from './withFetch'\nimport Loader from \"./Loader\"\nimport NavBar from \"./NavBar\"\nimport { BACKEND } from './Configuration';\n// import airbnbIcon from \"./airbnb.png\"\n\nexport const useStyles = makeStyles(theme => ({\n    result: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        margin: \"2rem\",\n        overflow: \"hidden\"\n\n    },\n    header: {\n        fontSize: \"2rem\",\n        margin: \"7rem 0rem 1rem 0rem\",\n        width: \"100vw\",\n        justifyContent: \"center\"\n\n\n    },\n\n    bold: {\n        fontWeight: \"bold\"\n    },\n\n    subtitle: {\n        fontSize: \"1rem\",\n        color: \"dark grey\",\n        border: `10px solid ${theme.palette.primary}`\n    },\n\n    buttonGroup: {\n        margin: \"1rem\",\n    },\n    column: {\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    row: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\"\n    },\n    colored: {\n        color: \"grey\",\n    },\n    navbar: {\n        zIndex: \"10\"\n    },\n\n    buttonClicked: {\n        background: \"linear-gradient(45deg, #429A8F 30%, #48B09E 90%)\",\n        color: \"white\",\n        border: \"none\"\n    },\n    buttonUnclicked: {\n        background: \"white\",\n        color: \"black\",\n    },\n    loadingPage: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    resultPage: {\n        overflow: \"hidden\"\n    }\n\n\n\n\n})\n)\n\nconst useCardStyles = makeStyles({\n    card: props => ({\n        margin: \"1rem\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        maxHeight: \"auto\",\n        maxWidth: props.smallerMatches ? \"70vw\" : \"25vw\",\n        borderRadius: \"20px\",\n        boxShadow: \"10px 10px 15px rgba(64, 64, 64, 0.4)\",\n        // zIndex: \"-1\"\n    }),\n    rating: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    icons: {\n        fontSize: \"1em\",\n        transform: 'translate(0%,10%)'\n    },\n    info: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        margin: \"1rem\",\n    },\n    media: props => ({\n        // maxHeight : \"8rem\",\n        // width : \"100%\",\n        maxWidth: \"100%\",\n        width: \"100%\",\n        maxHeight: props.crop ? \"16vh\" : \"100%\",\n        borderRadius: \"20px 20px 0px 0px\",\n        objectFit: props.crop ? \"cover\" : \"inherit\",\n    }),\n    airbnb: {\n        height: \"auto\",\n        width: \"20%\",\n        transform: \"translate(0%, -20%)\"\n    },\n    name: {\n        display: \"flex\",\n        justifyContent: \"center\"\n    },\n    responsiveText: {\n        fontSize: \"1vmin\"\n    }\n\n})\n\nconst useGooglePlaces = (url_place) => {\n    const encodedUrl = encodeURIComponent(url_place)\n    const url = `${BACKEND}/places/google?l=` + encodedUrl\n    // console.log(url)\n    const [link, setLink] = useState(\"\")\n    const [hasLink, setHasLink] = useState(false)\n    const [fetchNow, setFetchNow] = useState(false)\n    const [linkExists, setLinkExists] = useState(false)\n\n    useEffect(() => {\n\n        (async function () {\n            let newLink = \"\"\n            let newHasLink = false\n            if (fetchNow) {\n                console.log(`Fetching url for ${url_place}`)\n                let response = await fetch(url)\n                let json = await response.json()\n                // console.log(json)\n\n\n                if (json !== null) {\n                    newLink = json[0]\n                    newHasLink = true\n                    setFetchNow(false)\n                    setLinkExists(true)\n                    // console.log(\"Found new link\", newLink)\n                }\n                else {\n                    newLink = `${BACKEND}/undefined`\n                    newHasLink = true\n                    setFetchNow(false)\n                }\n                setLink(newLink)\n                setHasLink(newHasLink)\n                if (linkExists) {\n                    window.open(newLink)\n    \n                }\n\n            }\n        }\n        )()\n    }, [url_place, fetchNow])\n    return [link, hasLink, linkExists, setFetchNow]\n}\n\nexport const RestaurantResult = (props) => {\n    const { link } = props\n\n    return (\n        <Result {...props} renderAdditionalContent={<a href={link} target=\"_blank\"  rel=\"noopener noreferrer\" style={{ color: \"grey\" }}><LanguageIcon></LanguageIcon></a>}></Result>\n    )\n\n}\n\nexport const HotelResult = (props) => {\n    const { link } = props\n    return (\n        <Result {...props} renderAdditionalContent={<a href={link} target=\"_blank\"   rel=\"noopener noreferrer\" style={{ color: \"grey\" }}><LanguageIcon></LanguageIcon></a>}></Result>\n    )\n\n}\n\nexport const PlaceResult = (props) => {\n    const { url_place } = props\n    const [link, hasLink, setFetchNow, linkExists] = useGooglePlaces(url_place)\n    console.log(link)\n    const onCardClick = () => {\n        setFetchNow(true)\n        // e.preventDefault()\n    }\n    // console.log({ hasLink, fetchNow })\n    // console.log(\"hasLink\", hasLink)\n    let additionalContent\n    // debugger\n    // console.table({hasLink,linkExists})\n    if (linkExists) {\n        additionalContent = <a href={link} target=\"_blank\"  rel=\"noopener noreferrer\" style={{ color: \"grey\" }}><LanguageIcon></LanguageIcon></a>\n    }\n    else if (hasLink) {\n        additionalContent = <span>No Website Found</span>\n    }\n    else {\n        additionalContent = <span onClick={onCardClick}><LanguageIcon></LanguageIcon></span>\n    }\n\n    return (\n        // <Result {...props} renderAdditionalContent={additionalContent}></Result >\n        <Result {...props}></Result>\n        // <Result {...props} renderAdditionalContent={<a href=\"localhost:3000/undefined\" target=\"_blank\" ><LanguageIcon></LanguageIcon></a>}></Result >\n    )\n\n}\n\n\n\nexport function Result(props) {\n    const { className, crop } = props\n    const smallerMatches = useMediaQuery('(max-width:400px)');\n    const classes = useCardStyles({ crop, smallerMatches });\n    const { rating, name, image_url, review_count, price, renderAdditionalContent } = props\n    // const [cardReady, setCardReady] = useState(false)\n    let ratingStar = []\n    for (let i = 1; i <= rating; i++) {\n        ratingStar.push(1)\n    }\n    if (rating % 1 !== 0) {\n        ratingStar.push(0.5)\n    }\n\n    const missingStarsNum = 5 - ratingStar.length\n    const missingStars = Array(missingStarsNum).fill().map((_,index) => (<StarBorderIcon key={index} className={classes.icons}></StarBorderIcon>))\n\n    const Image = (<div>\n        <img src={image_url} alt={name}\n            // image={image_url}\n            title={name}\n            className={classes.media}\n        // onLoad={() => {setCardReady(true)}}\n\n        />\n\n    </div>)\n\n    return (\n        <div className={[classes.card, className].join(\" \")}>\n            {/* {cardReady ? \"image displayed\" : \"card loading. please wait\"} */}\n            {Image}\n            <div className={classes.info}>\n                <div className={classes.name}>\n                    <Typography component={'span'} variant=\"caption\" gutterBottom>{name}</Typography>\n                    {/* <img src={airbnbIcon} alt=\"airbnb icon\" className={classes.airbnb}></img> */}\n\n                </div>\n                <Typography component={'span'} variant=\"caption\"><span className={classes.price}> <Typography component={'span'} variant='body2'> {price} </Typography> </span></Typography>\n                <Typography component = {'span'} variant=\"body2\" gutterBottom className={classes.responsiveText}>\n                    <div className={classes.rating}>\n                        {ratingStar.map((rating, index) => rating === 1 ?\n                            <StarIcon key={index} className={classes.icons}> </StarIcon> : <StarHalfIcon key={index} className={classes.icons}> </StarHalfIcon>)}\n                        {missingStars}\n                    </div>\n                    <div>\n                        {review_count} reviews\n                            <div>\n                        </div>\n                    </div>\n                </Typography>\n                {renderAdditionalContent}\n            </div>\n\n        </div>\n    )\n}\n\n\nfunction getSelected(selectedButtons) {\n    for (let key of Object.keys(selectedButtons)) {\n        if (selectedButtons[key]) {\n            return key\n        }\n    }\n}\n\nexport function Results(props) {\n    const classes = useStyles();\n    const { location, selectedButtons } = props.location.state\n    const cityName = location.split(\" \").map((name) => name[0].toUpperCase() + name.slice(1)).join(\" \")\n    const matches = useMediaQuery('(max-width:900px)');\n    const smallerMatches = useMediaQuery('(max-width:400px)');\n    const [buttons, setButton] = useState(selectedButtons)\n    const selected = getSelected(buttons)\n    const [loading, data, setLoading] = useFetch(`${BACKEND}/${selected}?location=` + props.location.state.location)\n\n    const Buttons = (\n        <div>\n            <ButtonGroup size=\"large\" className={classes.buttonGroup}>\n                <Button className={buttons[\"restaurants\"] ? classes.buttonClicked : classes.buttonUnclicked} onClick={createButtonHandler(\"restaurants\")} disableElevation>Restaurants</Button>\n                <Button className={buttons[\"hotels\"] ? classes.buttonClicked : classes.buttonUnclicked} onClick={createButtonHandler(\"hotels\")} disableElevation>Hotels</Button>\n                <Button className={buttons[\"places\"] ? classes.buttonClicked : classes.buttonUnclicked} onClick={createButtonHandler(\"places\")} disableElevation>Places</Button>\n            </ButtonGroup>\n\n        </div>\n\n    )\n    function createButtonHandler(buttonName) {\n        function handleClick() {\n            setButton(() => {\n                let newButtons = {\n                    \"hotels\": false,\n                    \"places\": false,\n                    \"restaurants\": false\n                }\n\n                newButtons[buttonName] = true\n                return newButtons\n            },\n\n                setLoading(true)\n\n            )\n        }\n        return handleClick\n    }\n\n    if (loading) {\n        return (\n            <>\n                <NavBar className={classes.navbar}></NavBar>\n                <div className={classes.loadingPage}>\n\n                    <div className={classes.header}>Take a look at your next adventure in <span className={classes.bold}>{cityName}</span></div>\n                    <Loader />\n                    {Buttons}\n                </div>\n            </>)\n    }\n    else {\n\n        let numCols\n\n        if (smallerMatches) {\n            numCols = 1\n\n        } else if (matches) {\n            numCols = 2\n\n        } else {\n            numCols = 5\n\n        }\n\n        const reverseIndex = (i) => {\n            let y = Math.floor(i / numCols)\n            let x = i - y * numCols\n\n            return [x, y]\n        }\n\n\n        const columns = []\n        for (let i = 0; i < numCols; i++) {\n            columns[i] = []\n        }\n\n\n        for (let i = 0; i < data.length; i++) {\n            const [x, y] = reverseIndex(i)\n            columns[x][y] = data[i]\n        }\n\n        return (\n            <>\n                <div className={classes.resultPage}>\n\n                    <div className={classes.header}>Take a look at your next adventure in <span className={classes.bold}>{cityName}</span></div>\n                    {Buttons}\n                    <div className={classes.subtitle}>{data.length} places found in {cityName}</div>\n\n                    <NavBar></NavBar>\n\n                    <div className={classes.row}>\n\n                        {columns.map((col, index) => (\n                            <div className={classes.column} key={index}>\n                                {col.map((element, index) => (\n                                    < div key={index}>\n                                        {buttons[\"hotels\"] ? <HotelResult {...element} className={classes.colored}></HotelResult> : null}\n                                        {buttons[\"restaurants\"] ? <RestaurantResult {...element} className={classes.colored}></RestaurantResult> : null}\n                                        {buttons[\"places\"] ? <PlaceResult {...element} className={classes.colored}></PlaceResult> : null}\n                                    </div>\n\n\n                                ))}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n}\n\nexport default Results","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from \"@material-ui/styles\"\n// import { styled } from \"@material-ui/styles\"\n// import { Link } from \"react-router-dom\"\n// import Header from './Header.js'\nimport headerImage from \"./header.png\"\nimport background from './background.jpg'\n// import SearchIcon from '@material-ui/icons/Search';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Button from '@material-ui/core/Button'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { HotelResult, PlaceResult, RestaurantResult } from './Results'\n// import { useFetch } from './withFetch'\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Autocomplete from \"./Autocomplete\"\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { BACKEND } from './Configuration';\n\n\nconst TopCard = ({ data, destinationOption }) => {\n    let props\n    if (data !== undefined) {\n        console.log(data)\n        console.log(data[0])\n        debugger\n        props = JSON.parse(JSON.stringify(data[0]))\n    }\n\n    props = Object.assign({}, props, { crop: true })\n\n    let renderedResult\n\n    if (destinationOption === \"restaurants\") {\n        renderedResult = <RestaurantResult {...props} ></RestaurantResult>\n    }\n    else if (destinationOption === \"hotels\") {\n        renderedResult = <HotelResult {...props} ></HotelResult>\n    }\n    else if (destinationOption === \"places\") {\n        renderedResult = <PlaceResult {...props}></PlaceResult>\n    }\n\n    return (\n        <div>\n            {renderedResult}\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    optionMenu: props => ({\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: \"center\",\n        order: props.orderSelect,\n        marginBottom: \".5rem\",\n        // background: \"#F4FAF9\"\n\n    }),\n    input: props => ({\n        border: \"0\",\n        height: '1.4rem',\n        padding: '.4rem 3.25rem',\n        width: props.width,\n        borderRadius: '.5rem',\n        backgroundColor: '#F4FAF9',\n        \n        '&::placeholder': {\n            fontWeight: 'normal',\n            fontFamily: 'Raleway'\n\n        }\n    }),\n    button: {\n        backgroundColor: \"#83CFC8\",\n        color: \"#FFFFFF\",\n        borderRadius: \".2rem\",\n        borderColor: \"#83CFC8\"\n    },\n    background: props => ({\n        zIndex: '-100',\n        width: \"150vw\",\n        transform: props.transform\n\n    }),\n    crop: {\n        position: \"absolute\",\n        width: \"100vw\",\n        maxHeight: \"50vh\",\n        overflow: \"hidden\",\n        top: \"0\",\n        display: \"flex\",\n        flexDirection: \"column\",\n\n\n    },\n    search: props => ({\n        zIndex: \"1000\",\n        display: \"flex\",\n        alignItems: \"flex-start\",\n        order: props.orderSearch\n    }),\n    title: props => ({\n        zIndex: \"10000\",\n        marginBottom: \"2.5rem\",\n        marginTop: \"5rem\",\n        display: \"flex\",\n        flexDirection: props.flexDirection,\n        alignItems: \"center\",\n        transform: \"translate(20%)\",\n        // height: \"20vh\",\n        // width: \"50vw\",\n        // transform: \"(scale(20%))\",\n    }),\n    logo: {\n        marginRight: \"1rem\",\n        width: \"5.5rem\",\n        height: \"auto\",\n    },\n    name: {\n        fontWeight: \"Bold\",\n        color: \"white\",\n        fontSize: \"2rem\"\n    },\n    container: props => ({\n        display: \"flex\",\n        flexDirection: props.flexDirectionContainer,\n        alignItems: props.alignItemContainer\n        // flexWrap : \"wrap\",\n        // flexDirection : \"column\",\n        // flexDirection : \"row\",\n        // justifyContent : \"center\",\n        // flexGrow : '1',\n        // alignItems : \"flex-start\",\n        // background: \"red\"\n    }),\n    underline: props => ({\n        background: \"white\",\n        width: \"3rem\",\n        height: \"0.3rem\",\n        transform: props.underlineTransform\n    }),\n    selectForm: props => ({\n        border: \"none\",\n        padding: \".5rem 2rem .5rem 1rem\",\n        borderRadius: \"1rem\",\n        appearance: \"none\",\n        color: \"#717473\",\n        marginLeft: \"1rem\"\n        // transform: \"translate(-20%)\"\n\n    }),\n    dropDownArrow: {\n        color: \"#717473\",\n        transform: \"translate(-150%)\"\n    },\n    mainMenu: props => ({\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: props.alignItems,\n        transform: props.mainMenuTransform\n    }),\n    page: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"50vh\",\n        justifyContent: \"space-between\",\n    },\n    upperBody: {\n        display: \"block\",\n    },\n    randomSlides: {\n        zIndex: \"1000\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n        animation: \"$fadein 2s\",\n\n    },\n\n    \"@keyframes fadein\": {\n        from: {\n            opacity: 0\n        },\n        to: {\n            opacity: 1\n        }\n        // overflow: \"hidden\",\n        // maxHeight: \"5rem\"\n        // transform: \"scale(70%)\"\n    },\n    subtitle: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        fontWeight: \"bold\",\n        fontSize: \"1.5rem\",\n        marginTop: \"1rem\",\n        color: \"#429a8f\"\n\n\n    },\n    subtitleContainer: {\n        display: \"flex\",\n        alignItems: \"flex-end\"\n    },\n\n    rectangle: {\n        height: \"30px\",\n        width: \"6px\",\n        marginRight: \".5rem\",\n        backgroundColor: \"#429a8f\"\n    },\n    lowerBody: props => ({\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        width: \"90vw\",\n        height: \"40vh\",\n        paddingTop: \"1rem\",\n        paddingBottom: \"1rem\",\n        background: props.background\n    }),\n    randomCard: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        // transform: \"translate(0,)\"\n    },\n    cardSubtitle: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        color: \"grey\",\n        fontSize: \"1rem\",\n        alignItems: \"flex-start\",\n    },\n    containerWithIcon: {\n        display: \"flex\",\n        marginTop: \"1rem\"\n    },\n    locationIcon: {\n        fontSize: \"2rem\",\n        color: \"grey\",\n        marginRight: \"1rem\"\n    },\n    searchPage: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    autocomplete: {\n        zIndex: \"10000\"\n    },\n    loadingSkeletons: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n        marginTop: \"1rem\"\n    },\n    loadingSkeleton: {\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    loadingSkeletonText: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    loadingSubtitleContainer: {\n        display: \"flex\",\n        marginTop: \"1rem\"\n    }\n\n\n})\n\nconst useColorStyle = makeStyles(\n    {\n        gradient: {\n            background: 'linear-gradient(45deg, #429A8F 30%, #48B09E 90%)',\n            color: \"white\",\n            marginLeft: \"1rem\",\n            maxHeight: \"1.65rem\",\n            transform: \"translate(-150%)\"\n        }\n    }\n)\n\n\nexport const SearchButton = () => {\n    const classes = useColorStyle()\n    return (\n        <Button variant=\"contained\" size=\"small\" className={classes.gradient} disableElevation>Search</Button>\n    )\n}\n\nconst randomizeCard = () => {\n    const topCityArray = [\"London\", \"New York\", \"Paris\", \"Tokyo\", \"Singapore\", \"Barcelona\", \"Los Angeles\", \"Rome\", \"San Francisco\", \"Chicago\", \"Madrid\", \"Amsterdam\", \"Toronto\", \"Montreal\", \"Hong Kong\", \"San Diego\", \"Boston\", \"Sydney\", \"Las Vegas\", \"Miami\", \"San Jose\"]\n    const destinationOptionsArray = [\"restaurants\", \"hotels\", \"places\"]\n    const randomNumberCity = Math.floor(Math.random() * Math.floor(topCityArray.length))\n    const randomOption = Math.floor(Math.random() * Math.floor(destinationOptionsArray.length))\n    const destinationOption = destinationOptionsArray[randomOption]\n    const chosenCity = topCityArray[randomNumberCity]\n\n    return [destinationOption, chosenCity]\n\n}\n\n\n\nexport function Search() {\n    // STYLE\n    let props\n    let elements\n    let numberCards\n    const tabletMatches = useMediaQuery('(min-width: 900px)')\n    const desktopMatches = useMediaQuery('(min-width: 1350px ')\n    const placeholderMatches = useMediaQuery('(min-width: 10px ')\n\n    console.table({ tabletMatches, desktopMatches, placeholderMatches })\n\n    if (desktopMatches) {\n        props = {\n            transform: \"translate(-20%, -40%) scale(75%)\",\n            flexDirection: \"row\",\n            alignItems: \"flex-start\",\n            underlineTransform: \"translate(-380%, 450%)\",\n            width: \"25vw\",\n            flexDirectionContainer: \"row\",\n            mainMenuTransform: \"translate(-40%)\",\n            orderSelect: \"2\",\n            orderSearch: \"1\",\n            alignItemContainer: \"flex-start\"\n\n        }\n        numberCards = 4\n    }\n    else if (tabletMatches) {\n        props = {\n            transform: \"translate(0, -40%)\",\n            flexDirection: \"row\",\n            alignItems: \"flex-start\",\n            underlineTransform: \"translate(-380%, 450%)\",\n            width: \"25vw\",\n            flexDirectionContainer: \"row\",\n            mainMenuTransform: \"translate(-20%)\",\n            orderSelect: \"2\",\n            orderSearch: \"1\",\n            alignItemContainer: \"flex-start\"\n\n        }\n        numberCards = 3\n    }\n    else {\n        props = {\n            transform: \"translate(0)\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            underlineTransform: \"translate(-150%, 130%)\",\n            width: \"50vw\",\n            flexDirectionContainer: \"column\",\n            mainMenuTransform: \"translate(0%)\",\n            orderSelect: \"1\",\n            orderSearch: \"2\",\n            alignItemContainer: \"center\"\n        }\n        numberCards = 1\n    }\n    const classes = useStyles(props)\n    let loadingSkeletonArray = new Array(numberCards).fill(1)\n\n    // VARIABLES + STATES\n    // const [location, setLocation] = useState(\"\")\n    const [selectedButtons, setButtons] = useState({\n        \"hotels\": false,\n        \"places\": false,\n        \"restaurants\": true\n    })\n\n\n    const [randomCards, setRandomCards] = useState([])\n    const [loading, setLoading] = useState(true)\n    elements = { selectedButtons: selectedButtons }\n    const fetchNewCard = async () => {\n        let response\n        const [newDestinationOption, newChosenCity] = randomizeCard()\n        response = await fetch(`${BACKEND}/${newDestinationOption}?location=${newChosenCity}`)\n        return response\n    }\n    const setAllCards = async () => {\n        setLoading(true)\n        let newRandomCards = []\n        let chosenCityArray = []\n        for (let i = 0; i < numberCards; i++) {\n            const [destinationOption, chosenCity] = randomizeCard()\n            if (!(chosenCity in chosenCityArray)) {\n                let randomDict = { destinationOption, chosenCity }\n                newRandomCards.push(randomDict)\n            }\n            chosenCityArray.push(chosenCity)\n\n        }\n        (async function () {\n            let responses = await Promise.all(newRandomCards.map(({ destinationOption, chosenCity }) => fetch(`${BACKEND}/${destinationOption}?location=${chosenCity}`)))\n            let datas = await Promise.all(responses.map(async response => {\n                while (!response.ok) {\n                    response = await fetchNewCard()\n                    if (response.ok) {\n                        break\n                    }\n                }\n                return response.json()\n            }\n            ))\n            let newRandomCardsData = datas.map((data, index) => Object.assign({}, { data }, newRandomCards[index]))\n\n            setRandomCards(newRandomCardsData)\n            setLoading(false)\n        })()\n    }\n\n    useEffect(() => {\n        if (placeholderMatches) {\n            setAllCards()\n        }\n\n    }, [placeholderMatches])\n\n    useEffect(() => {\n        const shuffleCards = setTimeout(() => {\n            setAllCards()\n        }, 100000)\n        return () => clearTimeout(shuffleCards)\n\n    }, [numberCards, randomCards])\n\n\n\n    function createChangeHandler() {\n        const e = document.getElementById(\"formOption\")\n        const nameOption = e.options[e.selectedIndex].value\n        function buttonHandler() {\n            setButtons(prevState => {\n                let newSelectedButtons = {\n                    \"hotels\": false,\n                    \"places\": false,\n                    \"restaurants\": false\n                }\n                // JSON.parse(JSON.stringify(prevState))\n                newSelectedButtons[nameOption] = true\n                // console.log(newSelectedButtons)\n                return newSelectedButtons\n            })\n\n        }\n        return buttonHandler\n    }\n\n    // console.table(randomCards)\n    return (\n        <>\n            <div className={classes.searchPage}>\n\n                <div className={classes.crop}>\n                    <img src={background} className={classes.background} alt=\"background\"></img>\n                    {/* <Header/> */}\n                </div>\n\n                <div className={classes.page}>\n                    <div className={classes.mainMenu}>\n\n                        <div className={classes.title}>\n                            <img src={headerImage} className={classes.logo} alt=\"logo\"></img>\n                            <div className={classes.name}>TRIP PLAN</div>\n                            <div className={classes.underline}></div>\n                        </div>\n                        <div className={classes.container}>\n                            <div className={classes.search}>\n                                <Autocomplete className={classes.input} {...elements}></Autocomplete>\n                            </div>\n\n                            <div className={classes.optionMenu}>\n                                <form onChange={() => createChangeHandler()()}>\n                                    <select id=\"formOption\" className={classes.selectForm}>\n\n                                        <option\n                                            value=\"restaurants\"\n                                            name=\"restaurants\"\n                                        // onClick={() => createChangeHandler(\"restaurants\")()}\n                                        // style={{ borderColor: selectedButtons[\"restaurants\"] ? \"black\" : \"#E1E1E1\" }}\n                                        >Restaurants</option>\n                                        <option\n                                            value=\"hotels\"\n                                            name=\"hotels\"\n                                        // onClick={createChangeHandler(\"hotels\")}\n                                        // style={{ borderColor: selectedButtons[\"hotels\"] ? \"black\" : \"#E1E1E1\" }}\n                                        >Hotels</option>\n                                        <option\n                                            value=\"places\"\n                                            name=\"places\"\n                                        // onClick={createChangeHandler(\"places\")}\n                                        // style={{ borderColor: selectedButtons[\"places\"] ? \"black\" : \"#E1E1E1\" }}\n                                        >Places</option>\n                                    </select>\n                                </form>\n                                <div>\n                                    <ArrowDropDownIcon className={classes.dropDownArrow}></ArrowDropDownIcon>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.lowerBody}>\n                    <div className={classes.subtitleContainer}>\n                        <div className={classes.rectangle}></div>\n                        <div className={classes.subtitle}>EXPLORE OUR DESTINATIONS</div>\n                    </div>\n\n                    {!loading ?\n\n                        <div className={classes.randomSlides}>\n                            {\n\n                                randomCards.map((cardProps, index) => (\n                                    <>\n                                        <div className={classes.randomCard}>\n\n                                            <TopCard key={index} {...cardProps}></TopCard>\n\n\n                                            <div className={classes.containerWithIcon}>\n                                                <div><LocationOnIcon className={classes.locationIcon}></LocationOnIcon></div>\n                                                <div className={classes.cardSubtitle}>\n                                                    <div>\n                                                        {randomCards[index][\"chosenCity\"]}\n                                                    </div>\n                                                    <div>\n                                                        {randomCards[index][\"destinationOption\"][0].toUpperCase() + randomCards[index][\"destinationOption\"].slice(1)}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </>\n                                ))\n                            }\n\n                        </div> :\n                        <div className={classes.loadingSkeletons}>\n                            {loadingSkeletonArray.map(index => (\n                                <>\n                                    <div className={classes.loadingSkeleton}>\n                                        <div>\n                                            <Skeleton variant=\"rect\" width={250} height={260} key={index}></Skeleton>\n                                        </div>\n                                        <div className={classes.loadingSubtitleContainer}>\n                                            <div><LocationOnIcon className={classes.locationIcon}></LocationOnIcon></div>\n                                            <div className={classes.loadingSkeletonText}>\n                                                <Skeleton variant=\"text\" width={100} />\n                                                <Skeleton variant=\"text>\" width={150} />\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </>\n                            ))}\n                        </div>\n                    }\n                </div>\n            </div>\n\n\n        </>\n\n\n    )\n}\nexport default Search","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport headerImage from \"./tripplanBlue.png\"\nconst useStyle = makeStyles(\n    {\n        mainTitle: {\n            fontWeight: \"bolder\",\n            fontSize: \"5rem\",\n            color: \"#5DB4AC\"\n        },\n        subtitle: {\n            fontSize: \"1rem\",\n            color: \"#5DB4AC\"\n        },\n        container: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: \"100vh\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n        },\n        icon: {\n            height: \"13rem\"\n        }\n\n    }\n)\nexport const Undefined = () => {\n    const classes = useStyle()\n    return (\n        <>\n            <div className={classes.container}>\n                <img src={headerImage} alt=\"header\" className={classes.icon}></img>\n                <div className={classes.mainTitle}>\n                    Error 404\n        </div>\n                <div className={classes.subtitle}>\n                    Oops, something went wrong\n        </div>\n            </div>\n        </>\n    )\n}\n\nexport default Undefined\n","import React from 'react';\n// import Header from './Header';\nimport Search from './Search';\nimport Results from './Results';\nimport Undefined from './Undefined'\nimport {BACKEND} from './Configuration'\n// import useFetch, { withFetch } from \"./withFetch\"\nimport { createMuiTheme } from \"@material-ui/core/styles\"\nimport { ThemeProvider } from \"@material-ui/styles\"\nimport { makeStyles } from '@material-ui/core';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Raleway',\n\n    body2: {\n      fontSize: \".7rem\",\n      color: \"grey\"\n    }\n  },\n\n  palette: {\n    primary: {\n      main: \"#429a8f\"\n\n    },\n    secondary: {\n      main: \"#86C3B9\"\n    },\n    // info: {\n    //   main: \"linear-gradient(45deg, #429A8F 30%, #48B09E 90%)\",\n    // }\n  },\n\n}\n)\n\nconst useStyles = makeStyles({\n  App:  props => ({\n    // display: 'flex',\n    // flexDirection: 'column',\n    textAlign: 'center',\n    alignItems: 'center',\n    // margin: '5vmin',\n    fontFamily: \"Raleway\",\n    margin: \"0\",\n    // overflowX : props.overflow ? \"hidden\" : \"auto\"\n    // overflowX : props.overflow ? \"hidden\" : \"auto\"\n    // overflowX: \"hidden\"\n  }), \n\n})\n\nfunction App() {\n  const routeName = window.location.pathname\n  const shouldOverflow = (routeName === \"/results\" )\n  const classes = useStyles({overflow : shouldOverflow})\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <Router>\n          {/* <Link to={{pathname : \"/restaurants\", state : {location : \"new york\"}}}>Please click me...</Link> */}\n          <div className={classes.App}>\n            {/* <Header /> */}\n            <Switch>\n              <Route path=\"/\" exact component={Search} />\n              {/* <Route path=\"/results\" component={Results} /> */}\n              {/* <Route path=\"/results\" component={(props) => { */}\n              <Route path=\"/results\" component={Results} />\n              <Route component={Undefined} />\n                \n\n              {/* <Route path=\"/marlene\" component={() => (<Restaurants2 data={data2} />)} /> */}\n            </Switch>\n          </div>\n        </Router>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import Autocomplete from \"./Autocomplete\"\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Autocomplete /> */}\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}